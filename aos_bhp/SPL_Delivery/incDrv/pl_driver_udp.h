/** @file
 * Interface declaration for SPL UDP driver.
*/
 /*********************************************************************
 *                    Bombardier Transportation
 *
 *                      %created_by: jkrupp %
 *                      %version: 5 %
 *                      %date_created: 2013-09-12 11:44 %
 **********************************************************************                 
 *
 *  Revision    Date        Name        Description
 *  5           2013/09/12  jkrupp      remove header file FFFIS_Common.h because it is not needed here
 *  4           2012/01/22  jkrupp      add define to differ statistic AE_LOG entries between the instances
 *  3           2012/10/15  jkrupp      add function parameter statisticTime to UDP_Driver_Configure
 *  3           2012/09/17  ageck       moved definition of UDP_Driver_SetTimeData to pl_driver_types_udp.h
 *                                      changed return type of UDP_Driver_Configure
 *  2           2012/09/03  jkrupp      add UDP_Driver_Resend and UDP_Driver_Configure
 *  1           2012/08/28  jkrupp      created
 *
 **********************************************************************/
#ifdef SPL_ETH_DRIVER_FIRST_INSTANCE
    #ifndef PL_DRIVER_UDP_H_
        #define PL_DRIVER_UDP_H_
        #define PL_DRIVER_UDP_HH_
        /*lint -e961*/ /*redefinitions needed for same file used with different compiler setting*/
        #undef STATISTIC_AE_TEXT
        /*lint +e961*/
        #define STATISTIC_AE_TEXT "UDP1"
    #endif
#elif defined (SPL_ETH_DRIVER_SECOND_INSTANCE)
    #ifndef PL_DRIVER_UDP_2_H_
        #define PL_DRIVER_UDP_2_H_
        #define PL_DRIVER_UDP_HH_
        /*lint -e961*/ /*redefinitions needed for same file used with different compiler setting*/
        #undef STATISTIC_AE_TEXT
        /*lint +e961*/
        #define STATISTIC_AE_TEXT "UDP2"
    #endif
#endif

#ifdef PL_DRIVER_UDP_HH_
#ifdef CONCAT
/*lint -e961*/ /*redefinitions needed for same file used with different compiler setting*/
    #undef CONCAT
/*lint +e961*/
#endif

/**********************************************************************
 * Defines
 **********************************************************************/
#ifdef SPL_ETH_DRIVER_FIRST_INSTANCE
    #define CONCAT(a) a
#elif defined(SPL_ETH_DRIVER_SECOND_INSTANCE)
    #define CONCAT(a) a##_1
#else
    #define CONCAT(a) a
#endif

/**********************************************************************
 * Include files
 **********************************************************************/
#include "pl_driver.h"

/**********************************************************************
 * Structures
 **********************************************************************/
extern PLD2_Struct CONCAT(PL_Driver_UDP2);

/**********************************************************************
 * Function definitions
 **********************************************************************/
/**
*@brief Write clock telegram to clock telegram queue
* Write clock telegram to clock telegram queue to pass clock telegram from external
* Ethernet driver (generated by define SPL_ETH_DRIVER_SECOND_INSTANCE)
* to internal Ethernet driver (gnerated without define SPL_ETH_DRIVER_SECOND_INSTANCE)
*   @return  void
*******************************************************************************/

/**
*@brief Set IP address and port for incomming connection
*   @param  Profibus_Physical_Address unknown
*   @param  HostName_Or_Address unknown
*   @return  always false
*******************************************************************************/ 
spBOOL CONCAT(Ethernet_Add_Node) (  spBYTE   Profibus_Physical_Address,
                                    spCHAR * HostName_Or_Address,
                                    spUINT16 Port);

/**
*@brief Set IP address and port for outgoing connection
*   @param  Profibus_Physical_Address unknown
*   @param  HostName_Or_Address unknown
*   @return  always false
*******************************************************************************/ 
spBOOL CONCAT(Ethernet_Set_Self) (  spBYTE   Profibus_Physical_Address,
                                    spCHAR * HostName_Or_Address,
                                    spUINT16 Port);

/**
*@brief Send all pending SPL telegrams on outgoing TCP/IP connection
* Send all pending SPL telegrams, gathered in internal buffer, on outgoing TCP/IP connection.
* To be called by application, if no more telegrams are expected in current task cycle.
*   @return  PL_DRIVER_NO_ERROR on success, PL_DRIVER_ERROR_ON_SEND otherwise
*******************************************************************************/
spINT CONCAT(Ethernet_Driver_Flush) ( void );

/**
*@brief
*   @return  PL_DRIVER_NO_ERROR on success, PL_DRIVER_ERROR_ON_SEND otherwise
*******************************************************************************/
spINT CONCAT(UDP_Driver_Resend) ( void );

/**
*@brief
*   @return  PL_DRIVER_NO_ERROR on success, PL_DRIVER_ERROR_ON_SEND otherwise
*******************************************************************************/
spINT CONCAT(UDP_Driver_Configure) (    spUINT16 resendCount,
                                        spUINT16 resendDelay,
                                        spUINT16 sendBufferSize,
                                        spUINT16 datagramSize,
                                        spUINT16 maxRecvGap,
                                        spUINT16 statisticTime );

/*lint -e961*/ /*redefinitions needed for same file used with different compiler setting*/
#undef PL_DRIVER_UDP_HH_
/*lint +e961*/
#endif
